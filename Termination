# %variable% = data from webhook fed into Power Automate, that inputs into the script
# ******* replaces OU

param($Date,$empID, $userID, $eA10, $Groups, $NAMEfull, $OU)
    $Date = Get-Date -Format 'yyyy-MM-dd'
    $empID = "%EmpID%"
    $userID = Get-ADUser -Filter {employeeID -eq $empID} | Select-Object -ExpandProperty SamAccountName
        $eA10 = Get-ADUser $userID -Properties * | Select-Object -ExpandProperty extensionAttribute10
        $Groups = (Get-ADPrincipalGroupMembership -Identity $userID | Select-Object -ExpandProperty SAMAccountName) -ne 'Domain Users'
        $JOBtitle = Get-ADUser $userID -Properties * | Select-Object -expandProperty title
        $NAMEfull = Get-ADUser -Filter {SamAccountName -eq $userID} | Select-Object -ExpandProperty Name
        $OU =  Get-ADUser $userID -Properties * | Select-Object -ExpandProperty distinguishedName    
if( $OU -ne "CN=$NAMEfull,OU=Disabled Accounts,*"){
    Disable-ADAccount -Identity $userID
    Get-ADUser $userID | Move-ADObject -TargetPath '*******'
    Remove-ADPrincipalGroupMembership -Identity AmorisMF -MemberOf $Groups -Confirm:$false
    Set-ADUser -Identity $userID -replace @{description="Terminated $Date";facsimileTelephoneNumber='<not set>';homePhone='<not set>';ipPhone='<not set>';telephoneNumber='<not set>'}
    Set-ADUser -Identity $userID -remove @{extensionAttribute10="$eA10";facsimileTelephoneNumber='<not set>';homePhone='<not set>';ipPhone='<not set>';telephoneNumber='<not set>'}
}else{}

$eA10 | Out-File -FilePath C:\Apps\EagleID.txt
$JOBtitle | Out-File -FilePath C:\Apps\Title.txt
