#Part one, changing only name not username

param($empID,$OU,$NAMEdisplay,$NAMEfirst,$NAMElast,$NAMEmiddle,$pName,$prefName,$displayName,$NAMEfull)
    $empID='%empID%'
        $OU=Get-ADUser -Filter {employeeID -eq $empID} -Properties * | Select-Object -ExpandProperty distinguishedName
    $NAMEdisplay='%NAMEfirst% %NAMElast%'
    $NAMEfirst='%NAMEfirst%'
    $NAMElast='%NAMElast%'
    $NAMEmiddle='%NAMEmiddle%'
    $pName='%NAMEpref%'
        $prefName=$pName.substring(0,1).toupper()+$pName.substring(1).tolower()
        $displayName="$prefName $NAMElast"
    $NAMEfull=IF($null -eq $NAMEmiddle){"$NAMEfirst $NAMElast"}else{"$NAMEfirst $NAMEmiddle $NAMElast"}

Rename-ADObject -Identity $OU -NewName "$NAMEfull"
Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -replace @{`
    displayName=$displayName;`
    givenName=$prefName;`
    middleName=$NAMEmiddle`
}



#Part two, update username and set proxies

param($email,$userID,$empID,$eA10,$NAMEfirstO,$NAMElastO,$Office,$3cx,$userIDo,$NAMEfirst,$NAMElast,$NAMEmiddle)
    $email='%email%'
        $userIDa=[string]$email.Split('@')[0..($email.Split('@').count-2)]
    $empID='%empID%'
        $eA10=Get-ADUser -Filter {employeeID -eq $empID} -Properties * | Select-Object -ExpandProperty extensionAttribute10
        $Office=Get-ADUser -Filter {employeeID -eq $empID} -Properties * | Select-Object -ExpandProperty office
            $3cx=IF($Office -eq 'Admin'){'Update name attached to extension (3cx and Confluence - Admin Phone Extension)'}else{$null}
        $userIDo=Get-ADUser -Filter {employeeID -eq $empID} -Properties * | Select-Object -ExpandProperty SamAccountName
    $NAMEfirst='%NAMEfirst%'
    $NAMElast='%NAMElast%'
    $NAMEmiddle='%NAMEmiddle%'

#UserID length test
$NAMEfirstScrb=$NAMEfirst -replace '[^\p{L}\p{Nd}/`//-/_/!]', ''
$NAMElastScrb=$NAMElast -replace '[^\p{L}\p{Nd}/`//-/_/!]', ''
IF($email -eq '' -or $userIDa -eq ''){
    $userIDa="$NAMEfirstScrb.$NAMElastScrb"}
        $testA=Get-ADUser -Filter {proxyAddresses -like "smtp:$userIDa*"} | Select-Object -ExpandProperty Enabled
$NAMEf=$NAMEfirstScrb[0]
    $userIDb="$NAMEfirstScrb.$NAMEmiddle.$NAMElastScrb"
        $testB=Get-ADUser -Filter {proxyAddresses -like "smtp:$userIDb*"} | Select-Object -ExpandProperty Enabled
    $userIDc="$NAMEf.$NAMElastScrb"
        $testC=Get-ADUser -Filter {proxyAddresses -like "smtp:$userIDc*"} | Select-Object -ExpandProperty Enabled
    $userIDd="$NAMEf$NAMEmiddle.$NAMElastScrb"

IF($testA -ne 'True' -AND $userIDa.length -gt 20){
    IF($testB -ne 'True' -AND $userIDb.length -gt 20){
        IF($testC -ne 'True' -AND $userIDc.length -gt 20){
            IF($userIDd.length -gt 20){
                $userID=$userIDd
                $email="$userIDd*******"
                $HR="Provided UserID exceeds 20 characters or in use, contact HR to have UserID and Email updated to $userID / $email"}
        }else{
            $userID=$userIDc
            $email="$userIDc*******"
            $HR="Provided UserID exceeds 20 characters or in use, contact HR to have UserID and Email updated to $userID / $email"}
    }else{
        $userID=$userIDb
        $email="$userIDb*******"
        $HR="Provided UserID exceeds 20 characters or in use, contact HR to have UserID and Email updated to $userID / $email"}
}else{
    $userID=$userIDa
    $email="$userIDa*******"
    $HR=$null}

#Changing name
    Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -replace @{mail=$email;sAMAccountName=$userID;userPrincipalName=$email}
    Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -remove @{ProxyAddresses="SMTP:$userIDo*******"}
    Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -add @{ProxyAddresses="SMTP:$email,smtp:$userIDo*******" -split ","}

#Creating txt files for Power Automate to read
$3cx | Out-File -FilePath C:\Apps\NC\AR3cx.txt
$eA10 | Out-File -FilePath C:\Apps\NC\eA10.txt
$HR | Out-File -FilePath C:\Apps\NC\HR.txt
$Office | Out-File -FilePath C:\Apps\NC\Office.txt
$userID | Out-File -FilePath C:\Apps\NC\userIDn.txt
$userIDo | Out-File -FilePath C:\Apps\NC\userIDo.txt
