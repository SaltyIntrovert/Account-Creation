param($ChangeType, $Dept, $Office, $DC, $Lat, $3cx, $OUa, $OU, $email, $empID, $eA10, $jobTitleO, $OfficeO, $jobTitle, $mngrID, $City, $mngrAD, $mngrOU, $Phone, $State, $POS, $Street, $Zip, $StoreID, $userID, $Groups)
    $ChangeType='%ChangeType%'
    $Dept='%dept%'
        $Office=IF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF('%Office%' -eq '*******'){'*******'}
                else{'%Office%'}
            $DC=IF($Office -eq 'Nothern DC'){'NDC'}elseIF($Office -eq 'Southern DC'){'SDC'}
            $Lat=IF($Office -like "*thern DC"){'Create Latitude/PathGuide account'}else{'N/A'}
            $3cx=IF($Office -eq 'Admin'){'Create extension via 3CX, update Confluence (Admin Phone Extension)`
                                            IP phone = Extension`
                                            extensionAttribute13 = Full number (DID)'}else{'N/A'}
        $OUa=IF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                else{$Dept}
            $OU=IF($Office -eq 'Admin'){"$OUa*******"}else{"$Office*******"}
    $email='%email%'
    $empID='%empID%'
        $eA10=Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandProperty extensionAttribute10
        $jobTitleO =Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandProperty title
        $OfficeO=Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandPropert physicalDeliveryOfficeName
    $jobTitle='%jobTitle%'
    $mngrID='%mngrID%'
        $City=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty l
        $mngrAD=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty SamAccountName
        $mngrOU=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty distinguishedName
        $Phone=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty extensionAttribute12
        $State='%state%'
            $POS=IF($State -eq 'MT'){'POSMT'}else{'POS'}
        $Street=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty streetAddress
        $Zip=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty postalCode
    $StoreID='%StoreID%'
    $userID='%userID%'
        $Groups=(Get-ADPrincipalGroupMembership -Identity $userID | Select-Object -ExpandProperty SAMAccountName) -ne 'Domain Users'
                IF($Groups -eq ''){}else{Remove-ADPrincipalGroupMembership -Identity $userID -MemberOf $Groups -Confirm:$false}

#Update Profile
    Get-ADUser $userID | Move-ADObject -TargetPath "$OU*******"
    Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -replace @{`
        department=$Dept;`
        extensionAttribute4=$jobTitle;`
        extensionAttribute5=$Office;`
        extensionAttribute6=$mngrAD;`
        extensionAttribute12=$Phone;`
        homePhone=$Phone;`
        manager=$mngrOU;`
        l=$City;`
        physicalDeliveryOfficeName=$Office;`
        st=$state;`
        streetAddress=$Street;`
        telephoneNumber=$Phone;`
        title=$jobTitle}

#Title based access; AD Global Groups automated, create a txt file to import specified access into a ticket
    #*******
    IF($jobTitle -eq '*******'){Add-ADPrincipalGroupMembership $userID -MemberOf "$Office *******"
        $Egl="******* / ******* / ******* / $POS / *******"
        $MS='n/a'}
    elseIF($jobTitle -eq 'Assistant Manager Trainee'){Add-ADPrincipalGroupMembership $userID -MemberOf "$Office *******"
        $Egl="******* / ******* / ******* / ******* / $POS / *******"
        $MS='n/a'}
#Not Listed/New Title
    else{
        $Egl='Position not listed in script / compare with similar title and/or reach out to Manager'
        $MS='TBD'}

#Email list
        $Amgr=(Get-ADUser -Filter {title -eq 'Assistant Store Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Bkpr=(Get-ADUser -Filter {title -eq 'Bookkeeper' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Cmgr=(Get-ADUser -Filter {title -eq 'Clothing Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $SGDm=(Get-ADUser -Filter {title -eq 'Sporting Goods Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Smgr=Get-ADUser -Filter {employeeID -eq $mngrID} | Select-Object -ExpandProperty UserPrincipalName
    IF($Office -ne 'Admin'){
            $eMGR=IF($Dept -eq 'Clothing'){"$Amgr;$Bkpr;$Cmgr;$Smgr"}
                elseIF($Dept -eq 'Sporting Goods'){"$Amgr;$Bkpr;$SGDm;$Smgr"}
                else{"$Amgr;$Bkpr;$Smgr"}}
        else{$eMGR=$Smgr}

#Create JSON
$JSON=[pscustomobject]@{
    eagleAR=$Egl
    eagleID=$eA10
    eMGR=$eMGR
    ext=$3cx
    jobTitleO=$jobTitleO
    latAR=$Lat
    msAR=$MS
    officeO=$OfficeO
}
$JSON | ConvertTo-Json -Compress | Write-Output
