param($ChangeType, $Dept, $OUa, $email, $empID, $eA10, $JOBtitleO, $OfficeO, $JOBtitle, $mngrID, $City, $Country, $mngrAD, $mngrOU, $Phone, $State, $Street, $Zip, $Office, $DC, $Lat, $OU, $3CX, $POS, $StoreID, $userID, $Groups)
    $ChangeType="%ChangeType%"
    $Dept="%DEPT%"
        $OUa=IF($Dept -eq '*******'){'*******'}
            elseIF($Dept -eq '*******'){'*******'}
            elseIF($Dept -eq '*******'){'*******'}
            else{"%DEPT%"}
    $email="%Email%"
    $empID="%empID%"
        $eA10=Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandProperty extensionAttribute10
        $JOBtitleO =Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandProperty title
        $OfficeO=Get-ADUser -Filter {employeeID -eq $empID}  -Properties * | Select-Object -ExpandPropert physicalDeliveryOfficeName
    $JOBtitle="%JOBtitle%"
    $mngrID="%mngrID%"
        $Country=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty Country
        $City=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty l
        $mngrAD=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty SamAccountName
        $mngrOU=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty distinguishedName
        $Phone=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty extensionAttribute12
        $State=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty st
            $POS=IF($State -eq 'MT'){'POSMT'}else{'POS'}
        $Street=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty streetAddress
        $Zip=Get-ADUser -Filter {employeeID -eq $mngrID} -Properties * | Select-Object -ExpandProperty postalCode
    $Office=IF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                elseIF($Dept -eq '*******'){'*******'}
                else{"%Office%"}
        $DC=IF($Office -eq 'Nothern DC'){'NDC'}elseIF($Office -eq 'Southern DC'){'SDC'}
        $Lat=IF($Office -like "*thern DC"){'Create Latitude/PathGuide account'}else{'N/A'}
        $OU=IF($Office -eq 'Admin'){"$OUa*******"}else{"$Office*******"}
        $3CX=IF($Office -eq 'Admin'){'Create/Update extension via 3CX, update Confluence (Admin Phone Extension)'}else{'N/A'}
        $POS=IF($State -eq 'MT'){'POSMT'}else{'POS'}
    $StoreID="%StoreID%"
    $userID="%userID%"
        $Groups=(Get-ADPrincipalGroupMembership -Identity $userID | Select-Object -ExpandProperty SAMAccountName) -ne 'Domain Users'
                IF($Groups -eq ''){}else{Remove-ADPrincipalGroupMembership -Identity $userID -MemberOf $Groups -Confirm:$false}

#Update Profile
Get-ADUser $userID | Move-ADObject -TargetPath "$OU*******"
Get-ADUser -Filter {employeeID -eq $empID} | Set-ADUser -replace @{`
    department=$Dept;`
    extensionAttribute4=$JOBtitle;`
    extensionAttribute5=$Office;`
    extensionAttribute6=$mngrAD;`
    extensionAttribute12=$Phone;`
    homePhone=$Phone;`
    manager=$mngrOU;`
    l=$City;`
    physicalDeliveryOfficeName=$Office;`
    st=$state;`
    streetAddress=$Street;`
    telephoneNumber=$Phone;`
    title=$JOBtitle}

#Title based access; AD Global Groups automated, create a txt file to import specified access into a ticket
    IF($JOBtitle -eq '*******'){Add-ADPrincipalGroupMembership $userID -MemberOf "$Office*******"
        $Egl="******* $POS"
        $MS='*******'}
    elseIF($JOBtitle -eq '*******'){Add-ADPrincipalGroupMembership $userID -MemberOf '*******'
        $Egl="******* $POS"
        $MS='*******'}
    else{
        $Egl='Position not listed in script / compare with similar title and/or reach out to Manager'
        $MS='TBD'}

#Email list
        $Amgr=(Get-ADUser -Filter {title -eq 'Assistant Store Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Bkpr=(Get-ADUser -Filter {title -eq 'Bookkeeper' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Cmgr=(Get-ADUser -Filter {title -eq 'Clothing Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $SGDm=(Get-ADUser -Filter {title -eq 'Sporting Goods Manager' -AND office -eq $Office -AND enabled -eq $true} | Select-Object -ExpandProperty UserPrincipalName) -join ';'
        $Smgr=Get-ADUser -Filter {employeeID -eq $mngrID} | Select-Object -ExpandProperty UserPrincipalName
    IF($Office -ne 'Admin'){
            $eMGR=IF($Dept -eq 'Clothing'){"$Amgr;$Bkpr;$Cmgr;$Smgr"}
                elseIF($Dept -eq 'Sporting Goods'){"$Amgr;$Bkpr;$SGDm;$Smgr"}
                else{"$Amgr;$Bkpr;$Smgr"}}
        else{$eMGR=$Smgr}
#Output data to .txt
$eA10 | Out-File -FilePath C:\Apps\LPC\eA10.txt
$Egl | Out-File -FilePath C:\Apps\LPC\ARegl.txt
$eMGR | Out-File -FilePath C:\Apps\LPC\eMGR.txt
$JOBtitleO | Out-File -FilePath C:\Apps\LPC\JOBtitleO.txt
$Lat | Out-File -FilePath C:\Apps\LPC\ARlat.txt
$MS | Out-File -FilePath C:\Apps\LPC\ARms.txt
$Office | Out-File -FilePath C:\Apps\LPC\Office.txt
$OfficeO | Out-File -FilePath C:\Apps\LPC\OfficeO.txt
$3CX | Out-File -FilePath C:\Apps\LPC\3CX.txt
